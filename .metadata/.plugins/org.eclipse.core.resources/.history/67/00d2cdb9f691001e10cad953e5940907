/*
 * scheduler.h
 *
 *  Created on: Dec 1, 2023
 *      Author: HP
 */

#ifndef INC_SCHEDULER_H_
#define INC_SCHEDULER_H_

#include <stdint.h>

struct sTask{
	struct sTask *left, *right;
	void (*funcPointer)();
	uint32_t delay, period, taskID;
	uint8_t run_flag;
}*sTaskList = 0;

#define SCH_MAX_TASKS 40

uint8_t tracker[SCH_MAX_TASKS], mutex_lock;

//typedef struct{
//	void (*pTask)(void);
//	uint32_t Delay;
//	uint32_t Period;
//	uint8_t  RunMe;
//
//	uint32_t TaskID;
//}sTasks;
//
//#define SCH_MAX_TASKS 40
//
//void SCH_Init(void);
//void SCH_Add_Task(void (*pFunction)(), uint32_t DELAY, uint32_t PERIOD);
//void SCH_Update(void);
//void SCH_Dispatch_Tasks(void);
//void SCH_Delete_Task(uint32_t ID);



void SCH_Update(void);
int SCH_Add_Task(void (*funcPointer)(), uint32_t delay, uint32_t period);
void SCH_Delete_Task(uint32_t);
void SCH_Dispatch_Tasks(void);


#endif /* INC_SCHEDULER_H_ */
